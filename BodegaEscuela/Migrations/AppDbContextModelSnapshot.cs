// <auto-generated />
using System;
using BodegaEscuela.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BodegaEscuela.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Bitacora", b =>
                {
                    b.Property<int>("IdBitacora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBitacora"));

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("usuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdBitacora");

                    b.HasIndex("usuarioIdUsuario");

                    b.ToTable("Bitacoras");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<int>("IdEscuela")
                        .HasColumnType("int");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("escuelaIdEscuela")
                        .HasColumnType("int");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.Property<int?>("tipoCedulaIdTipo")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("escuelaIdEscuela");

                    b.HasIndex("tipoCedulaIdTipo");

                    b.HasIndex("usuarioIdUsuario");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Escuela", b =>
                {
                    b.Property<int>("IdEscuela")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEscuela"));

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("rolIdRol")
                        .HasColumnType("int");

                    b.HasKey("IdEscuela");

                    b.HasIndex("rolIdRol");

                    b.ToTable("Escuelas");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstado");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPedido"));

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int?>("estadoIdEstado")
                        .HasColumnType("int");

                    b.Property<DateOnly>("fechaEntrega")
                        .HasColumnType("date");

                    b.Property<DateOnly>("fechaPedido")
                        .HasColumnType("date");

                    b.HasKey("IdPedido");

                    b.HasIndex("estadoIdEstado");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<int>("IdEscuela")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int?>("escuelaIdEscuela")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.Property<int?>("proveedorIdProveedor")
                        .HasColumnType("int");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.HasIndex("escuelaIdEscuela");

                    b.HasIndex("proveedorIdProveedor");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.ProductoDia", b =>
                {
                    b.Property<int>("IdProductoDia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductoDia"));

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<DateOnly>("fecha")
                        .HasColumnType("date");

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.Property<int?>("productoIdProducto")
                        .HasColumnType("int");

                    b.Property<int>("vendido")
                        .HasColumnType("int");

                    b.HasKey("IdProductoDia");

                    b.HasIndex("productoIdProducto");

                    b.ToTable("ProductoDias");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<int>("IdEscuela")
                        .HasColumnType("int");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("correoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("escuelaIdEscuela")
                        .HasColumnType("int");

                    b.Property<int?>("estadoIdEstado")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.HasKey("IdProveedor");

                    b.HasIndex("escuelaIdEscuela");

                    b.HasIndex("estadoIdEstado");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.TipoCedula", b =>
                {
                    b.Property<int>("IdTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipo"));

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipo");

                    b.ToTable("TipoCedula");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<int>("IdEscuela")
                        .HasColumnType("int");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("escuelaIdEscuela")
                        .HasColumnType("int");

                    b.Property<int?>("estadoIdEstado")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("rolIdRol")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario");

                    b.HasIndex("escuelaIdEscuela");

                    b.HasIndex("estadoIdEstado");

                    b.HasIndex("rolIdRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Bitacora", b =>
                {
                    b.HasOne("BodegaEscuela.ModelsBE.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioIdUsuario");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Empleado", b =>
                {
                    b.HasOne("BodegaEscuela.ModelsBE.Escuela", "escuela")
                        .WithMany()
                        .HasForeignKey("escuelaIdEscuela");

                    b.HasOne("BodegaEscuela.ModelsBE.TipoCedula", "tipoCedula")
                        .WithMany()
                        .HasForeignKey("tipoCedulaIdTipo");

                    b.HasOne("BodegaEscuela.ModelsBE.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioIdUsuario");

                    b.Navigation("escuela");

                    b.Navigation("tipoCedula");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Escuela", b =>
                {
                    b.HasOne("BodegaEscuela.ModelsBE.Rol", "rol")
                        .WithMany()
                        .HasForeignKey("rolIdRol");

                    b.Navigation("rol");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Pedido", b =>
                {
                    b.HasOne("BodegaEscuela.ModelsBE.Estado", "estado")
                        .WithMany()
                        .HasForeignKey("estadoIdEstado");

                    b.Navigation("estado");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Producto", b =>
                {
                    b.HasOne("BodegaEscuela.ModelsBE.Escuela", "escuela")
                        .WithMany()
                        .HasForeignKey("escuelaIdEscuela");

                    b.HasOne("BodegaEscuela.ModelsBE.Proveedor", "proveedor")
                        .WithMany()
                        .HasForeignKey("proveedorIdProveedor");

                    b.Navigation("escuela");

                    b.Navigation("proveedor");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.ProductoDia", b =>
                {
                    b.HasOne("BodegaEscuela.ModelsBE.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("productoIdProducto");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Proveedor", b =>
                {
                    b.HasOne("BodegaEscuela.ModelsBE.Escuela", "escuela")
                        .WithMany()
                        .HasForeignKey("escuelaIdEscuela");

                    b.HasOne("BodegaEscuela.ModelsBE.Estado", "estado")
                        .WithMany()
                        .HasForeignKey("estadoIdEstado");

                    b.Navigation("escuela");

                    b.Navigation("estado");
                });

            modelBuilder.Entity("BodegaEscuela.ModelsBE.Usuario", b =>
                {
                    b.HasOne("BodegaEscuela.ModelsBE.Escuela", "escuela")
                        .WithMany()
                        .HasForeignKey("escuelaIdEscuela");

                    b.HasOne("BodegaEscuela.ModelsBE.Estado", "estado")
                        .WithMany()
                        .HasForeignKey("estadoIdEstado");

                    b.HasOne("BodegaEscuela.ModelsBE.Rol", "rol")
                        .WithMany()
                        .HasForeignKey("rolIdRol");

                    b.Navigation("escuela");

                    b.Navigation("estado");

                    b.Navigation("rol");
                });
#pragma warning restore 612, 618
        }
    }
}
